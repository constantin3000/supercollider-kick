{\rtf1\ansi\ansicpg932\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset128 HiraKakuProN-W3;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
}
\deftab560
\pard\pardeftab560\sl280

\f0\fs24 \cf0 (\
	\cf2 SynthDef\cf0 (\cf3 \\SinKick\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 SinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 1)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
	\cf2 SynthDef\cf0 (\cf3 \\SawKick\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 Saw\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 1)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 1)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
	\cf2 SynthDef\cf0 (\cf3 \\SquareKick\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 1, 1)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\pard\pardeftab560\sl280
\cf4 //distortion\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_dist\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 1).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+noise\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_noise\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 1).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 6, 0.01, amp)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\
\cf4 //+ saw\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_saw\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 6, 0.01, amp)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\
\cf4 //+ square\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_square\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.5)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 6, 0.01, amp)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+ high\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_high\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.1)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 8, 0.01, 0.05)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+ high++\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_high_saw\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Saw\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.2, 2), 0.5, 0.05).distort * \cf2 Line\cf0 .kr(-2, 0, 0.5)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.1)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 8, 0.01, 0.05)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+ release\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_release\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Saw\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 0.5, 0, 0, 1, -20), gate, freq, 0, 0.2, 2), 0.5, 0.005).distort * \cf2 Line\cf0 .kr(-2, 0, 0.5)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.1)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 8, 0.01, 0.05)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.3, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+ noise\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_noise2\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.5).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Saw\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 0.5, 0, 0, 1, -20), gate, freq, 0, 0.2, 2), 0.5, 0.005).distort * \cf2 Line\cf0 .kr(-2, 0, 0.5)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.1)\
			+ \cf2 LFNoise0\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 20, 1, 100)), 1, 1)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.1, 1, 12));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
\
\cf4 //+ Kick!!!!!!\cf0 \
\
	\cf2 SynthDef\cf0 (\cf3 \\FSinKick_last\cf0 , \{\
		\cf2 arg\cf0  freq = 440, gate = 0.1, amp = 0.5, source, pan = 0.0;\
		source = \cf2 Pan2\cf0 .ar(\
			\cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 1, 0.1).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq / 2, 0, 0.5, 2), 1, 0.1).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 FSinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq * 2, 0, 0.5, 2), 1, 0.05).distort * \cf2 Line\cf0 .kr(2, 0, 0.9)\
			+ \cf2 Saw\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.2, 2), 0.5, 0.05).distort * \cf2 Line\cf0 .kr(-2, 0, 0.5)\
			+ \cf2 Pulse\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr(0, 1, 0, 0, 1, -20), gate, freq, 0, 0.5, 2), 0.5, 0.03, 0.1)\
			+ \cf2 Saw.ar\cf0 (freq * 2, 0.0025, 0.25)\
			+ \cf2 LFNoise0\cf0 .ar(freq * 8, 0.005, 0.05)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0, 0.12, 1, 8));\
		);\
		\cf2 Out\cf0 .ar(0, source);\
	\}).store;\
)}